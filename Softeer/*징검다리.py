# 징검다리
# 남북으로 흐르는 개울에 동서로 징검다리가 놓여져 있다.
# 이 징검다리의 돌은 들쑥날쑥하여 높이가 모두 다르다. 철수는 개울의 서쪽에서 동쪽으로 높이가 점점 높은 돌을 밟으면서 개울을 지나가려고 한다.
# 돌의 높이가 서쪽의 돌부터 동쪽방향으로 주어졌을 때 철수가 밟을 수 있는 돌의 최대개수는?
n=int(input()) # 돌의 개수 n
h=list(map(int,input().split()))
cnt=0
rocks=[1]*n
for i in range(1, n):
   for j in range(i):
      if h[i]>h[j]:
         # 현재 값 rocks[i]와 각각에서 오는 값들 중
         rocks[i]=max(rocks[i], rocks[j]+1)
print(max(rocks))

# rocks[4] : 네번째 돌을 마지막에 밟으면서 밟을 수 있는 최대 돌의 개수
# 바로 각 돌로 가는 경우가 있기 때문에 1로 초기화. 아무것도 밟지 않고 1번돌로 오는 경우
# 4번 돌을 밟은 경우 이전에 밟은 돌은 index 4보다 작아야 하고, index 4의 높이보다 낮아야함.
# 두 조건 만족하는 돌 중 최대 값을 가진 돌을 선택해서 +1. 여기서 +1은 4번 돌을 밟는 것을 의미함.
